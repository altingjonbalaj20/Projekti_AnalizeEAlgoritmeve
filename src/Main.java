import java.util.Comparator;
import java.util.LinkedList;

public class Main {
    public static void main(String[] args) {
        LinkedList<Integer> arr = new LinkedList<>();


        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(-4);
        arr.add(8);
        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(-4);
        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(5);
        arr.add(7);
        arr.add(8);
        arr.add(9);
        arr.add(15);
        arr.add(90);
        arr.add(91);
        arr.add(92);
        for(int i = 100; i < 400; i++)
            arr.add(i);
        arr.add(50);
        arr.add(79);
        arr.add(1);arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(8);
        arr.add(12);
        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(16);
        arr.add(-4);
        arr.add(8);
        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(12);
        arr.add(-4);
        arr.add(8);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(12);
        arr.add(16);
        arr.add(-20);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);
        arr.add(5);
        arr.add(2);
        arr.add(0);
        arr.add(20);
        arr.add(50);
        arr.add(79);
        arr.add(1);


        arr.add(5);


        System.out.println(arr);
        BinaryInsertionSort binary = new BinaryInsertionSort();
        InterpolationInsertionSort interpolation = new InterpolationInsertionSort();
        long start = System.nanoTime();
        arr.sort(new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o1.compareTo(o2);
            }
        });
        long end1 = System.nanoTime();
        System.out.println(end1 - start);
    }
}
